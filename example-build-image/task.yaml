# apiVersion: tekton.dev/v1alpha1
# kind: Task
# metadata:
#   name: unit-tests
# spec:
#   inputs:
#     resources:
#     - name: workspace
#       type: git
#       targetPath: go/src/github.com/GoogleContainerTools/skaffold
#   steps:
#   - name: run-tests
#     image: golang
#     env:
#     - name: GOPATH
#       value: /workspace/go
#     workingDir: /workspace/go/src/github.com/GoogleContainerTools/skaffold
#     command:
#     - echo
#     args:
#     - "pass"
# ---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: build-push
spec:
  inputs:
    resources:
    - name: github-repo
      type: git
    params:
    - name: pathToDockerFile
      description: The path to the dockerfile to build
      default: ./github-repo/Dockerfile
    # - name: pathToContext
    #   description: The build context used by Kaniko (https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)
    #   default: github-repo
  outputs:
    resources:
    - name: builtImage
      type: image
  steps:
  - name: build
    image: gcr.io/kaniko-project/executor:v0.9.0
    # specifying DOCKER_CONFIG is required to allow kaniko to detect docker credential
    env:
    - name: "DOCKER_CONFIG"
      value: "/builder/home/.docker/" # Does this need a volume?
    command:
    - /kaniko/executor
    args:
    - --dockerfile=$(inputs.params.pathToDockerFile)
    - --destination=$(outputs.resources.builtImage.url)
    - --context=$(inputs.params.pathToContext)
---
# This task deploys with kubectl apply -f <filename>
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: demo-deploy-kubectl
spec:
  inputs:
    resources:
    - name: workspace
      type: git
    - name: image
      type: image
    params:
    - name: path
      description: Path to the manifest to apply
    - name: yqArg
      description: Okay this is a hack, but I didn't feel right hard-codeing `-d1` down below
    - name: yamlPathToImage
      description: The path to the image to replace in the yaml manifest (arg to yq)
  steps:
  - name: replace-image
    image: mikefarah/yq
    command: ['yq']
    args:
    - "w"
    - "-i"
    - "$(inputs.params.yqArg)"
    - "$(inputs.params.path)"
    - "$(inputs.params.yamlPathToImage)"
    - "$(inputs.resources.image.url)"
  - name: run-kubectl
    image: lachlanevenson/k8s-kubectl
    command: ['kubectl']
    args:
    - 'apply'
    - '-f'
    - '$(inputs.params.path)'